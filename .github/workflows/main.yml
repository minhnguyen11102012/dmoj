name: Install DMOJ with Ngrok

on:
  push:
    branches:
      - main

jobs:
  install_dmoj:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y git gcc g++ make python3-dev python3-pip libxml2-dev libxslt1-dev zlib1g-dev gettext curl redis-server mariadb-server libmysqlclient-dev
        curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt install -y nodejs
        sudo npm install -g sass postcss-cli postcss autoprefixer

    - name: Install MariaDB and Setup Database
      run: |
        sudo apt install -y mariadb-server libmysqlclient-dev
        sudo mariadb -e "CREATE DATABASE dmoj DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_general_ci;"
        sudo mariadb -e "GRANT ALL PRIVILEGES ON dmoj.* TO 'dmoj'@'localhost' IDENTIFIED BY 'your-database-password';"
        sudo mariadb -e "mariadb-tzinfo-to-sql /usr/share/zoneinfo | sudo mariadb -u root mysql"

    - name: Clone DMOJ repository
      run: |
        git clone https://github.com/DMOJ/site.git
        cd site
        git submodule init
        git submodule update

    - name: Create Virtual Environment and Install Dependencies
      run: |
        cd site
        python3 -m venv dmojsite
        . dmojsite/bin/activate
        pip3 install -r requirements.txt
        pip3 install mysqlclient

    - name: Configure local_settings.py
      run: |
        cd site/dmoj
        echo "DEBUG = True" > local_settings.py
        echo "DATABASES = {" >> local_settings.py
        echo "    'default': {" >> local_settings.py
        echo "        'ENGINE': 'django.db.backends.mysql'," >> local_settings.py
        echo "        'NAME': 'dmoj'," >> local_settings.py
        echo "        'USER': 'dmoj'," >> local_settings.py
        echo "        'PASSWORD': 'your-database-password'," >> local_settings.py
        echo "        'HOST': 'localhost'," >> local_settings.py
        echo "        'PORT': '3306'," >> local_settings.py
        echo "    }" >> local_settings.py
        echo "}" >> local_settings.py
        echo "ALLOWED_HOSTS = ['*']" >> local_settings.py
        echo "CELERY_BROKER_URL = 'redis://localhost:6379/0'" >> local_settings.py
        echo "CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'" >> local_settings.py
        echo "SECRET_KEY = os.environ.get('SECRET_KEY', 'replace-this-with-a-secure-key')" >> local_settings.py

    - name: Run Migrations
      run: |
        cd site
        . dmojsite/bin/activate
        python3 manage.py migrate
        python3 manage.py loaddata navbar
        python3 manage.py loaddata language_small
        python3 manage.py loaddata demo
        python3 manage.py createsuperuser --username admin --email admin@example.com --no-input

    - name: Compile Assets
      run: |
        cd site
        . dmojsite/bin/activate
        ./make_style.sh
        python3 manage.py collectstatic
        python3 manage.py compilemessages
        python3 manage.py compilejsi18n

    - name: Start Redis Server
      run: |
        sudo service redis-server start

    - name: Run DMOJ Server
      run: |
        cd site
        . dmojsite/bin/activate
        python3 manage.py runserver 0.0.0.0:8000 &
        sleep 10

    - name: Install Ngrok and Set up Tunnel
      run: |
        sudo apt install -y unzip
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok-v3-stable-linux-amd64.zip -o ngrok.zip
        unzip ngrok.zip
        ./ngrok authtoken 2nyiyWrhpT6OwyUoaoZ2zdE9nNo_7KtHBQxaox3Wx2t9qBHTT
        ./ngrok http 8000 &

    - name: Display Ngrok link
      run: |
        sleep 10
        curl -s http://127.0.0.1:4040/api/tunnels | jq '.tunnels[0].public_url'

    - name: Keep the server running
      run: |
        while true; do sleep 1000; done
