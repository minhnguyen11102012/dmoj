name: Install DMOJ with Ngrok and Keep Running

on:
  push:
    branches:
      - main

jobs:
  install_dmoj:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git gcc g++ make python3-dev python3-pip libxml2-dev libxslt1-dev zlib1g-dev gettext curl redis-server mariadb-server libmysqlclient-dev
        curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt-get install -y nodejs
        sudo npm install -g sass postcss-cli postcss autoprefixer
        pip3 install -r requirements.txt
        pip3 install mysqlclient

    - name: Clone DMOJ repository
      run: |
        git clone https://github.com/DMOJ/site.git
        cd site
        git submodule update --init --recursive
    
    - name: Create local_settings.py
      run: |
        mkdir -p site/dmoj
        echo "
DEBUG = True
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dmoj',
        'USER': 'dmoj',
        'PASSWORD': 'your-database-password',  # Replace with your actual database password
        'HOST': 'localhost',
        'PORT': '3306',
    }
}
ALLOWED_HOSTS = ['*']

CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'

SECRET_KEY = os.environ.get('SECRET_KEY', 'replace-this-with-a-secure-key')  # Change it to a secure secret key
        " > site/dmoj/local_settings.py
    
    - name: Run migrations
      run: |
        cd site
        python3 manage.py migrate
        python3 manage.py loaddata navbar
        python3 manage.py loaddata language_small
        python3 manage.py loaddata demo
        python3 manage.py createsuperuser --username admin --email admin@example.com --no-input
    
    - name: Run DMOJ server (Test it first)
      run: |
        cd site
        python3 manage.py runserver 0.0.0.0:8000 &
        sleep 10  # Wait a bit for the server to start

    - name: Install Ngrok and Set up Tunnel
      run: |
        sudo apt install -y unzip
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok-v3-stable-linux-amd64.zip -o ngrok.zip
        unzip ngrok.zip
        ./ngrok authtoken 2nyiyWrhpT6OwyUoaoZ2zdE9nNo_7KtHBQxaox3Wx2t9qBHTT
        ./ngrok http 8000 &

    - name: Display Ngrok link
      run: |
        sleep 10  # Allow some time for Ngrok to start
        curl -s http://127.0.0.1:4040/api/tunnels | jq '.tunnels[0].public_url'
    
    - name: Keep the server running
      run: |
        while true; do sleep 1000; done
